name: 'Deploy'

on:
  pull_request:
    branches: ['workshop/*']

jobs:
  set_name:
    name: 'Get name from branch name and set env'
    runs-on: ubuntu-latest
    steps:
      - run: echo "MY_NAME=${BRANCH##*/}" >> "$GITHUB_ENV"
        env:
          BRANCH: ${{ github.ref_name }}

  run_tests:
    name: 'Run frontend tests'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './frontend'
    steps:
      - name: Checkout repository
        # Task A.1:
        #
        # Answer A.1:
        uses: actions/checkout@v4

      - name: Install dependencies
        # Task A.1:
        #
        # Answer A.1:
        run: yarn install

      - name: Run tests
        # Task A.1:
        #
        # Answer A.1:
        run: yarn test

  build:
    name: 'Build Docker image and push to registry'
    # Task A.2:
    # depends-on: [set_name]
    # Answer A.2:
    depends-on: [set_name, run_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to registry
        uses: docker/build-push-action@v5
        with:
          push: 'true'
          tags: 'ghcr.io/computas/devops-workshop/${{ env.MY_NAME }}:latest'
          file: './frontend/Dockerfile'

  deploy:
    name: 'Deploy using Terraform'
    runs-on: ubuntu-latest
    depends-on: [build]
    env:
      TF_VAR_revision_suffix: ${{ github.sha }}
      TF_VAR_my_name: ${{ env.MY_NAME }}
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
    defaults:
      run:
        working-directory: './terraform'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Init Terraform
        run: terraform init

      - name: Set Terraform workspace
        run: teraform workspace new $MY_NAME || terraform workspace select $MY_NAME

      - name: Run Terraform plan
        run: terraform plan

      - name: Run Terraform apply
        # Task A.3
        #
        # Answer A.3
        run: terraform apply -auto-approve
